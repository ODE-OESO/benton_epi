This folder contains scripts for the SimInf implementation of COVID-19 modeling.

SimInf is a powerful R package that implements disease dynamics in C using a stochastic approach. It runs very quickly and has the ability to incorporate user-defined transitions. The disease dynamics are built on standard SIR, SEIR, and similar models.

The COVID-19 scripts in this repository pre- and post-process data to adapt the SimInf functions to disease dynamics characteristic of the COVID-19 pandemic.

At this point, the scripts are not packaged, because I have not done that before and I am not sure the best way to do it. The scripts are in their raw form and you are welcome to download and adapt them to your purposes.

I recommend that you begin by reviewing the file BentonCountycovidProjections2020.05.07-0580.pdf. It discusses the SimInf model and the different components of the COVID-19 script.

Briefly:
The model is a modified SEIR. Some proportion of Recovered lose their immunity and return to Susceptible. Some proportion of Exposed are identified through contact tracing and are Isolated. Some proportion of Infected die of COVID-19. I call this model SEIR-S/Is/Im/M.
The script sets initial conditions, disease dynamic parameters, and a series of events. The events include parachuting infected individuals, routine transfers between sub-populations, and optional large entry events (e.g. university students returning to a college town).
When the model runs, the script used the real-time prevalence to automatically introduce and lift policy interventions (major and minor), and allows for continual or temporary physical distancing. In Oregon, the current stay-at-home orders will be lifted in 3 phases, so these events are included. Also, in order to explore counterfactuals, there is an option to "switch off" policy interventions after a certain date.
Each simulation produces a user-defined number of trials to generate a confidence or credibility spread.
The SimInf package produces trajectories of the different compartments (e.g. Infectious or Recovered) and of the continuous variables (e.g. the intensity of the policy intervention). The script can plot these different trajectories with their credibility spreads.

To use the scripts:
1. download them to your machine, then open covid19_SimInf_5.6.2020.R.
2. Change any folder settings as needed in the script: setwd().
3. Select your parameters. There are 64 adjustable paramters in parmList. (Not counting the preset parameters in the rest of the code, which can be changed as you tinker). The parameters are explained in the comments. Refer to the pdf file BentonCountycovidProjections2020.05.07-0580.pdf for more detailed descriptions.
4. Unless you are modeling a community with a single large entry event (e.g. university students returning on/around a certain date), you probably don't want to include the studentEvent. Simply set maxStudentNodes = 0 and this event will not be created.
5. Run the script. The script automatically produces plots of daily active infections (I), intervention measures (phi), and daily new infections (newI). You can also use the code for these plots to plot other compartments or continuous variables. Read through pts_funScript5.5.2020.R for details.

You are welcome to leave comments/questions on github or email me at peter.banwarth@co.benton.or.us.

Planned refinements to the model include adding "super-spreader" event, and exploring the sensitivity of the model to changing parameters. For example, the disease dynamics are heavily dependent on how segmented the population is (measured by how many nodes there are). Highly segmented populations contain mini-epidemics, leading to lower overall infections, while highly-mixed populations experience wide-spread epidemics.

Citation:
Widgren S, Bauer P, Eriksson R, Engblom S (2019) SimInf: An R Package for Data-Driven Stochastic
Disease Spread Simulations. Journal of Statistical Software, 91(12), 1--42. doi: 10.18637/jss.v091.i12

Bauer P, Engblom S, Widgren S (2016) Fast event-based epidemiological simulations on national scales.
International Journal of High Performance Computing Applications, 30(4), 438--453. doi: 10.1177/1094342016635723

https://cran.r-project.org/web/packages/SimInf/vignettes/SimInf.pdf
https://cran.r-project.org/web/packages/SimInf/SimInf.pdf
https://github.com/stewid/SimInf
